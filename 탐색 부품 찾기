#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool binarySearch(vector<int> arr, int target, int left, int right) {
    if (left <= right) {
        int mid = left + (right - left) / 2;
        if (target == arr[mid])
            return true;
        else if (target < arr[mid])
            return binarySearch(arr, target, left, mid - 1);
        else if (target > arr[mid])
            return binarySearch(arr, target, mid + 1, right);
    }
    return false;
}

vector<string> solution(vector<int> itemList, vector<int> orderList) {
    vector<string> answer;
    sort(itemList.begin(), itemList.end());
    for (auto& order : orderList) {
        if (binarySearch(itemList, order, 0, itemList.size()))
            answer.push_back("yes");
        else
            answer.push_back("no");
    }
    return answer;
}

int main() {

    vector<int> itemList{ 8, 3, 7, 9, 2 };
    vector<int> orderList{ 5, 7, 9 };

    for (auto& str : solution(itemList, orderList))
        cout << str << " ";

    return 0;
}
